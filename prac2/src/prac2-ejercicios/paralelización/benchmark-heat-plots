#!/bin/bash

SCRIPT_DIR="$(readlink -fm "$(dirname "$0")")"
SCRIPT_COMMAND="$(basename "$0")"
set -o nounset
set -o pipefail
set -o errexit
trap 'echo "$SCRIPT_COMMAND: error $? at line $LINENO"' ERR

[[ $# -eq 0 ]] && {
    echo "Uso $0 fichero_de_entrada [directorio_de_salida]"
    echo "fichero_de_entrada debe ser un fichero tsv en el formato generado por el script benchmark-heat"
    exit 1
}

INPUT="$1"
OUTDIR="${2:-$(basename "$INPUT".plots)}"

col() {
    cut -f"$1"
}

all_rows() {
    tail -n+2 "${INPUT}"
}

TAB="$(printf '\t')"

filter_size() {
    egrep "^[^$TAB]+$TAB${1}$TAB" || true
}

filter_compiler() {
    egrep "^${1}$TAB" || true
}

quote_string() {
    echo "$1" | sed 's/_/\\_/g'
}

ALL_SIZES="$(all_rows | col 2 | sort -u)"
ALL_COMPILERS="$(all_rows | col 1 | sort -u)"

CREATED_DATA_FILES=() # to remove them at the end

mkdir "${OUTDIR}"

for c in $ALL_COMPILERS ; do
    TMPFILE="$(mktemp)"
    echo "set terminal pdfcairo size 15cm,10cm" >> "$TMPFILE"
    echo "set output \"${OUTDIR}/size-compiler=$c.pdf\""  >> "$TMPFILE"
    echo "set title 'TIME for each size with $(quote_string "$c")'"  >> "$TMPFILE"
    echo "set xlabel 'threads'"  >> "$TMPFILE"
    echo "set ylabel 'TIME'"  >> "$TMPFILE"
    echo "set yrange [0:*]"  >> "$TMPFILE"
    echo -n "plot " >> "$TMPFILE"
    for i in $ALL_SIZES ; do
        DATA_FILE="${OUTDIR}/compiler=$c,size=$i.dat"
        all_rows | filter_compiler "$c" | filter_size "$i" > "$DATA_FILE"
        CREATED_DATA_FILES+=("$DATA_FILE")
        echo -n "'$DATA_FILE' using 3:4:5:xtic(3):xticlabels(3) with yerrorlines pointtype 0 title '$i'," >> "$TMPFILE"
    done
    echo ""  >> "$TMPFILE"
    gnuplot "$TMPFILE"
    rm "$TMPFILE"
done

for i in $ALL_SIZES ; do
    TMPFILE="$(mktemp)"
    echo "set terminal pdfcairo size 15cm,10cm" >> "$TMPFILE"
    echo "set output \"${OUTDIR}/compiler-size=$i.pdf\""  >> "$TMPFILE"
    echo "set title 'TIME for each compiler for $(quote_string "$i")'"  >> "$TMPFILE"
    echo "set xlabel 'threads'"  >> "$TMPFILE"
    echo "set ylabel 'TIME'"  >> "$TMPFILE"
    echo "set yrange [0:*]"  >> "$TMPFILE"
    echo -n "plot " >> "$TMPFILE"
    for c in $ALL_COMPILERS ; do
        DATA_FILE="${OUTDIR}/compiler=$c,size=$i.dat"
        echo -n "'$DATA_FILE' using 3:4:5:xtic(3):xticlabels(3) with yerrorlines pointtype 0 title '$c'," >> "$TMPFILE"
    done
    echo ""  >> "$TMPFILE"
    gnuplot "$TMPFILE"
    rm "$TMPFILE"
done

rm "${CREATED_DATA_FILES[@]}"
